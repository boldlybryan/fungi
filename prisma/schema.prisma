// This is your Prisma schema file for the Fungi PoC

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(cuid())
  email         String      @unique
  passwordHash  String
  name          String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  
  prototypes    Prototype[]
  passwordResets PasswordReset[]
  sessions      Session[]
  accounts      Account[]
  
  @@index([email])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([sessionToken])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model PasswordReset {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([token])
  @@index([userId])
}

model Prototype {
  id              String   @id @default(cuid())
  description     String   @db.Text
  branchName      String   @unique
  v0ProjectId     String
  previewUrl      String?
  prNumber        Int?
  status          String   // IN_PROGRESS, SUBMITTED, MERGED, ARCHIVED, ERROR
  createdById     String
  submittedAt     DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  createdBy       User     @relation(fields: [createdById], references: [id], onDelete: Cascade)
  previewDatabase PreviewDatabase?
  
  @@index([createdById, status])
  @@index([createdById, updatedAt])
  @@index([branchName])
}

model PreviewDatabase {
  id               String    @id @default(cuid())
  branchName       String    @unique
  neonBranchId     String
  connectionString String
  prototypeId      String    @unique
  createdAt        DateTime  @default(now())
  
  prototype        Prototype @relation(fields: [prototypeId], references: [id], onDelete: Cascade)
  
  @@index([branchName])
}

